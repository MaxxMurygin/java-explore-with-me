CREATE TABLE IF NOT EXISTS users
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character varying(250)  NOT NULL,
    email character varying(255) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT uq_user_email UNIQUE (email),
    CONSTRAINT uq_user_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS categories
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character varying(50)  NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT uq_category_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    annotation character varying(2000)  NOT NULL,
    title character varying(120)  NOT NULL,
    description character varying(7000),
    state character varying(20),
    category_id bigint NOT NULL,
    initiator_id bigint NOT NULL,
    confirmed_requests bigint,
    views bigint,
    participant_limit int,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    paid boolean NOT NULL,
    request_moderation boolean,
    location_lat float NOT NULL,
    location_lon float NOT NULL,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT fk_event_users FOREIGN KEY (initiator_id)
        REFERENCES users (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT fk_event_categories FOREIGN KEY (category_id)
        REFERENCES categories (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    title character varying(50)  NOT NULL,
    pinned boolean DEFAULT FALSE,
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    compilation_id bigint NOT NULL,
    event_id bigint NOT NULL,
    CONSTRAINT pk_compilation_event PRIMARY KEY (id),
    constraint unique_compilations_events unique (compilation_id, event_id),
    CONSTRAINT fk_compilations FOREIGN KEY (compilation_id)
        REFERENCES compilations (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT fk_events FOREIGN KEY (event_id)
        REFERENCES events (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS requests
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    event_id bigint NOT NULL,
    requester_id bigint NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    status character varying(10)  NOT NULL,
    CONSTRAINT pk_requests PRIMARY KEY (id),
    CONSTRAINT fk_requests_users FOREIGN KEY (requester_id)
        REFERENCES users (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT fk_requests_events FOREIGN KEY (event_id)
        REFERENCES events (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);